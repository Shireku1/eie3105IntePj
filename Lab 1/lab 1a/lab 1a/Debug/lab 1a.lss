
lab 1a.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000174  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000120  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000174  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000001a4  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  000001e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000006d8  00000000  00000000  00000204  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000618  00000000  00000000  000008dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000256  00000000  00000000  00000ef4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000034  00000000  00000000  0000114c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000341  00000000  00000000  00001180  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000047  00000000  00000000  000014c1  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  00001508  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 40 00 	call	0x80	; 0x80 <main>
  78:	0c 94 8e 00 	jmp	0x11c	; 0x11c <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <main>:
#include <avr/io.h>
void t0delay100MCs();


int main(void)
{
  80:	cf 93       	push	r28
  82:	df 93       	push	r29
  84:	cd b7       	in	r28, 0x3d	; 61
  86:	de b7       	in	r29, 0x3e	; 62
  88:	28 97       	sbiw	r28, 0x08	; 8
  8a:	0f b6       	in	r0, 0x3f	; 63
  8c:	f8 94       	cli
  8e:	de bf       	out	0x3e, r29	; 62
  90:	0f be       	out	0x3f, r0	; 63
  92:	cd bf       	out	0x3d, r28	; 61

	DDRD=0xff;
  94:	8a e2       	ldi	r24, 0x2A	; 42
  96:	90 e0       	ldi	r25, 0x00	; 0
  98:	2f ef       	ldi	r18, 0xFF	; 255
  9a:	fc 01       	movw	r30, r24
  9c:	20 83       	st	Z, r18
	while(1)

	{
		PORTD=0x55;
  9e:	8b e2       	ldi	r24, 0x2B	; 43
  a0:	90 e0       	ldi	r25, 0x00	; 0
  a2:	25 e5       	ldi	r18, 0x55	; 85
  a4:	fc 01       	movw	r30, r24
  a6:	20 83       	st	Z, r18
		for (int i=0; i<1000; i++)
  a8:	1a 82       	std	Y+2, r1	; 0x02
  aa:	19 82       	std	Y+1, r1	; 0x01
  ac:	12 c0       	rjmp	.+36     	; 0xd2 <main+0x52>
		{
			for (int j=0; j<1000; j++);
  ae:	1c 82       	std	Y+4, r1	; 0x04
  b0:	1b 82       	std	Y+3, r1	; 0x03
  b2:	05 c0       	rjmp	.+10     	; 0xbe <main+0x3e>
  b4:	8b 81       	ldd	r24, Y+3	; 0x03
  b6:	9c 81       	ldd	r25, Y+4	; 0x04
  b8:	01 96       	adiw	r24, 0x01	; 1
  ba:	9c 83       	std	Y+4, r25	; 0x04
  bc:	8b 83       	std	Y+3, r24	; 0x03
  be:	8b 81       	ldd	r24, Y+3	; 0x03
  c0:	9c 81       	ldd	r25, Y+4	; 0x04
  c2:	88 3e       	cpi	r24, 0xE8	; 232
  c4:	93 40       	sbci	r25, 0x03	; 3
  c6:	b4 f3       	brlt	.-20     	; 0xb4 <main+0x34>
	DDRD=0xff;
	while(1)

	{
		PORTD=0x55;
		for (int i=0; i<1000; i++)
  c8:	89 81       	ldd	r24, Y+1	; 0x01
  ca:	9a 81       	ldd	r25, Y+2	; 0x02
  cc:	01 96       	adiw	r24, 0x01	; 1
  ce:	9a 83       	std	Y+2, r25	; 0x02
  d0:	89 83       	std	Y+1, r24	; 0x01
  d2:	89 81       	ldd	r24, Y+1	; 0x01
  d4:	9a 81       	ldd	r25, Y+2	; 0x02
  d6:	88 3e       	cpi	r24, 0xE8	; 232
  d8:	93 40       	sbci	r25, 0x03	; 3
  da:	4c f3       	brlt	.-46     	; 0xae <main+0x2e>
		{
			for (int j=0; j<1000; j++);
		}
		
		PORTD=0xaa;
  dc:	8b e2       	ldi	r24, 0x2B	; 43
  de:	90 e0       	ldi	r25, 0x00	; 0
  e0:	2a ea       	ldi	r18, 0xAA	; 170
  e2:	fc 01       	movw	r30, r24
  e4:	20 83       	st	Z, r18
		for (int i=0; i<1000; i++)
  e6:	1e 82       	std	Y+6, r1	; 0x06
  e8:	1d 82       	std	Y+5, r1	; 0x05
  ea:	12 c0       	rjmp	.+36     	; 0x110 <main+0x90>
		{
			for (int j=0; j<1000; j++);
  ec:	18 86       	std	Y+8, r1	; 0x08
  ee:	1f 82       	std	Y+7, r1	; 0x07
  f0:	05 c0       	rjmp	.+10     	; 0xfc <main+0x7c>
  f2:	8f 81       	ldd	r24, Y+7	; 0x07
  f4:	98 85       	ldd	r25, Y+8	; 0x08
  f6:	01 96       	adiw	r24, 0x01	; 1
  f8:	98 87       	std	Y+8, r25	; 0x08
  fa:	8f 83       	std	Y+7, r24	; 0x07
  fc:	8f 81       	ldd	r24, Y+7	; 0x07
  fe:	98 85       	ldd	r25, Y+8	; 0x08
 100:	88 3e       	cpi	r24, 0xE8	; 232
 102:	93 40       	sbci	r25, 0x03	; 3
 104:	b4 f3       	brlt	.-20     	; 0xf2 <main+0x72>
		{
			for (int j=0; j<1000; j++);
		}
		
		PORTD=0xaa;
		for (int i=0; i<1000; i++)
 106:	8d 81       	ldd	r24, Y+5	; 0x05
 108:	9e 81       	ldd	r25, Y+6	; 0x06
 10a:	01 96       	adiw	r24, 0x01	; 1
 10c:	9e 83       	std	Y+6, r25	; 0x06
 10e:	8d 83       	std	Y+5, r24	; 0x05
 110:	8d 81       	ldd	r24, Y+5	; 0x05
 112:	9e 81       	ldd	r25, Y+6	; 0x06
 114:	88 3e       	cpi	r24, 0xE8	; 232
 116:	93 40       	sbci	r25, 0x03	; 3
 118:	4c f3       	brlt	.-46     	; 0xec <main+0x6c>
		{
			for (int j=0; j<1000; j++);
		}

	}
 11a:	c1 cf       	rjmp	.-126    	; 0x9e <main+0x1e>

0000011c <_exit>:
 11c:	f8 94       	cli

0000011e <__stop_program>:
 11e:	ff cf       	rjmp	.-2      	; 0x11e <__stop_program>
